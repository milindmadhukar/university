data <- read.delim("./father_son_heights.csv", header = TRUE, sep = ",")
fathers_height <- data$fathers_height
sons_height <- data$sons_height
# Correlation coefficient
print(cor(fathers_height, sons_height))
linear_model <- lm(fathers_height ~ sons_height)
print(summary(linear_model)
data <- read.delim("./father_son_heights.csv", header = TRUE, sep = ",")
clear
cls
data <- read.delim("./father_son_heights.csv", header = TRUE, sep = ",")
fathers_height <- data$fathers_height
sons_height <- data$sons_height
# Correlation coefficient
print(cor(fathers_height, sons_height))
linear_model <- lm(fathers_height ~ sons_height)
summary(linear_model)
x <- c(1, 1, 2, 2, 3, 3, 4, 5, 6, 7)
y <- c(2, 7, 7, 10, 8, 12, 10, 14, 11, 14)
linear_model <- lm(y ~ x)
print(summary(linear_model))
r <- cor(x, y)
print(r)
plot(x,y, main="Overtime vs. Additional Units",xlab="Overtime(in hrs)",
ylab="additional units",col="red")
biology <- c(2, 4, 1, 5, 3, 6)
social <- c(5, 6, 2, 3, 4, 1)
zoology <- c(3, 4, 5, 6, 1, 2)
r_bs <- cor(biology, social)
r_bz <- cor(biology, zoology)
r_sz <- cor(social, zoology)
print(max(r_bs, r_bz, r_sz))
biology <- c(2, 4, 1, 5, 3, 6)
social <- c(5, 6, 2, 3, 4, 1)
zoology <- c(3, 4, 5, 6, 1, 2)
r_bs <- cor(biology, social)
print(r_bs)
r_bz <- cor(biology, zoology)
print(r_bz)
r_sz <- cor(social, zoology)
print(r_sz)
print(max(r_bs, r_bz, r_sz))
n <- 100
p <- 0.001
q <- 1 - p
# x0 is probability for no defective blades
x0 <- dbinom(0, n, p)
print(x0)
# x1 is the probability for exactly one defective blade
x1 <- dbinom(1, n, p)
print(x1)
consignment_size <- 10000
# x2 is the probability for 2 defective blades in a packet in a consignment of
# 1000 packets
x2 <- dbinom(2, n, p) * consignment_size
x2
# This distribution is a "BINOMIAL DISTRIBUTION"
x_values <- 0:n
plot(x_values, pbinom(x_values, n, p),
type = "s", lwd = 2, col = "red",
main = "Cumulative Distribution Function", xlab = "Number of Defective
Blades", ylab = "Cumulative Probability"
)
plot(x_values, dbinom(x_values, n, p),
type = "h", lwd = 2, col = "blue",
main = "Probability Mass Function", xlab = "Number of Defective Blades",
ylab = "Probability"
)
# Variance of the binomial distribution
variance <- n * p * q
print("Variance")
print(variance)
# Expected value of 2X + 51
expected_value <- 2 * (n * p) + 51
print(expected_value)
print("Expected Value")
print(expected_value)
p_defective <- 0.001 # Probability of a blade being defective
n_packets <- 10000 # Total number of packets
n_blades <- 100 # Number of blades per packet
# Calculate probabilities
prob_no_defective <- dbinom(0, n_packets, p_defective)
prob_one_defective <- dbinom(1, n_packets, p_defective)
prob_two_defective <- dbinom(2, n_packets, p_defective)
# Output
cat("Probability of no defective blades in a packet:", prob_no_defective, "\n")
cat("Probability of one defective blade in a packet:", prob_one_defective, "\n")
cat("Probability of two defective blades in a packet:", prob_two_defective, "\n")
# Distribution sketch
plot(0:10, dbinom(0:10, n_packets, p_defective), type = "h", ylim = c(0, 0.1), xlab = "Number of Defective Blades", ylab = "Probability", main = "Probability Function of Defective Blades")
plot(0:10, pbinom(0:10, n_packets, p_defective), type = "s", ylim = c(0, 1), xlab = "Number of Defective Blades", ylab = "Probability", main = "Cumulative Distribution Function of Defective Blades")
# Variance
variance <- n_packets * p_defective * (1 - p_defective)
cat("Variance of the distribution:", variance, "\n")
# Expected value of 2X + 51
expected_value <- 2 * (n_packets * p_defective) + 51
cat("Expected value of 2X + 51:", expected_value, "\n")
p_defective <- 0.001 # Probability of a blade being defective
n_packets <- 10000 # Total number of packets
n_blades <- 100 # Number of blades per packet
# Calculate probabilities
prob_no_defective <- dbinom(0, n_packets, p_defective)
prob_one_defective <- dbinom(1, n_packets, p_defective)
prob_two_defective <- dbinom(2, n_packets, p_defective)
# Output
cat("Probability of no defective blades in a packet:", prob_no_defective, "\n")
cat("Probability of one defective blade in a packet:", prob_one_defective, "\n")
cat("Probability of two defective blades in a packet:", prob_two_defective, "\n")
# Distribution sketch
plot(0:10, dbinom(0:10, n_packets, p_defective), type = "h", ylim = c(0, 0.1), xlab = "Number of Defective Blades", ylab = "Probability", main = "Probability Function of Defective Blades")
plot(0:10, pbinom(0:10, n_packets, p_defective), type = "s", ylim = c(0, 1), xlab = "Number of Defective Blades", ylab = "Probability", main = "Cumulative Distribution Function of Defective Blades")
# Variance
variance <- n_packets * p_defective * (1 - p_defective)
cat("Variance of the distribution:", variance, "\n")
# Expected value of 2X + 51
expected_value <- 2 * (n_packets * p_defective) + 51
cat("Expected value of 2X + 51:", expected_value, "\n")
n <- 100
p <- 0.001
q <- 1 - p
# x0 is probability for no defective blades
x0 <- dbinom(0, n, p)
print(x0)
# x1 is the probability for exactly one defective blade
x1 <- dbinom(1, n, p)
print(x1)
consignment_size <- 10000
# x2 is the probability for 2 defective blades in a packet in a consignment of
# 1000 packets
x2 <- dbinom(2, n, p) * consignment_size
x2
# This distribution is a "BINOMIAL DISTRIBUTION"
x_values <- 0:n
plot(x_values, pbinom(x_values, n, p),
type = "s", lwd = 2, col = "red",
main = "Cumulative Distribution Function", xlab = "Number of Defective
Blades", ylab = "Cumulative Probability"
)
plot(x_values, dbinom(x_values, n, p),
type = "h", lwd = 2, col = "blue",
main = "Probability Mass Function", xlab = "Number of Defective Blades",
ylab = "Probability"
)
# Variance of the binomial distribution
variance <- n * p * q
print("Variance")
print(variance)
# Expected value of 2X + 51
expected_value <- 2 * (n * p) + 51
print(expected_value)
print("Expected Value")
print(expected_value)
observed <- c(0, 1, 2, 3, 4, 5)
frequency <- c(1, 10, 24, 35, 18, 8)
total_trials <- sum(frequency)
binomial_expected <- dbinom(observed, size = 5, prob = 0.5) * total_trials
lambda <- 5 * 0.5
poisson_expected <- dpois(observed, lambda) * total_trials
par(mar = c(5, 5, 4, 2) + 0.1)
plot(observed, frequency,
type = "o", col = "blue", ylim = c(0, max(frequency)),
xlab = "No. of dice showing 4, 5, or 6", ylab = "Frequency", main =
"Experimental vs. Expected Distribution"
)
lines(observed, binomial_expected, type = "o", col = "red")
lines(observed, poisson_expected, type = "o", col = "green")
legend("topright",
legend = c("Experimental", "Binomial", "Poisson"), col =
c("blue", "red", "green"), pch = c(1, 1, 1)
)
N <- 200
n <- 50
p <- 20 / 50
compute_packets <- function(probability) {
return(round(N * probability))
}
probability_no_damage <- dbinom(0, n, p)
packets_no_damage <- compute_packets(probability_no_damage)
probability_at_least_one_damage <- 1 - probability_no_damage
packets_at_least_one_damage <- N - packets_no_damage
probability_at_most_two_damage <- sum(dbinom(0:2, n, p))
packets_at_most_two_damage <-
compute_packets(probability_at_most_two_damage)
variance <- n * p * (1 - p)
expected_value <- 3 * n * p - 5
# Output
cat("Number of packets with no damaged masks: ", packets_no_damage, "\n")
cat(
"Number of packets with at least one damaged mask: ",
packets_at_least_one_damage, "\n"
)
cat(
"Number of packets with at most two damaged masks: ",
packets_at_most_two_damage, "\n"
)
cat("Variance of the distribution: ", variance, "\n")
cat("E(3X - 5): ", expected_value, "\n")
# Plotting
x_values <- 0:n # Number of damaged masks
pmf <- dbinom(x_values, n, p)
cdf <- pbinom(x_values, n, p)
plot(x_values, pmf, type = "h", main = "Probability Function
(PMF)", xlab = "Number of Damaged Masks", ylab = "Probability")
plot(x_values, cdf,
type = "s", main = "Cumulative Distribution Function (CDF)",
xlab = "Number of Damaged Masks", ylab = "Cumulative Probability"
)
n <- 7 # DEGREE OF FREEDOM
N <- 128
P <- 0.5 # probability of getting head
x <- c(0, 1, 2, 3, 4, 5, 6, 7)
obf <- c(7, 6, 19, 36, 30, 23, 7, 1)
exf <- dbinom(x, n, P) * 128
print(sum(obf))
print(sum(exf))
chisq <- sum((obf - exf)^2 / exf) # CALCULATED VALUE
qchisq(0.99, 7) # at 1%los
qchisq(0.95, 7) # at 5% los
